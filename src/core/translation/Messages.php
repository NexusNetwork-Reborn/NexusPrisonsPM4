<?php
declare(strict_types=1);

namespace core\translation;

use pocketmine\utils\TextFormat;

interface Messages {

    const MESSAGE = [
        "nameTooLong" => self::RED . "The name you selected contains too many characters!",
        "noPermission" => self::RED . "You don't have permission to do this action!",
        "noSkin" => self::RED . "The item in your hand does not possess an item skin!",
        "inWarzone" => self::RED . "You can not do this in warzone!",
        "levelUp" => self::LIGHT_PURPLE . "You've leveled up to {level} and received {reward}!",
        "invalidPlayer" => self::RED . "Invalid player!",
        "onlineTime" => self::GREEN . "{name} online time: {amount}",
        "invalidAmount" => self::RED . "Invalid amount!",
        "invalidAuction" => self::RED . "Invalid auction!",
        "bidTooLow" => self::RED . "Your bid is too low!",
        "bidTooHigh" => self::RED . "Your bid is higher than the buy price!",
        "boughtAuctionItem" => self::AQUA . "You have won the auction!",
        "bidPlaced" => self::AQUA . "Your bid has been placed!",
        "prestigeRequirement" => self::RED . "You must reach the max xp to prestige!",
        "maxPrestige" => self::RED . "You reached the max prestige!",
        "cantTeleportToLounge" => self::RED . "You can't accept a TPA Request while in the lounge!",
        "max" => self::RED . "You reached the max amount!",
        "clearBankBlock" => self::RED . "You must clear your bank block before prestige!",
        "savedByWhitescroll" => self::LIGHT_PURPLE . "Your item was restored due to being white-scrolled!",
        "invalidEnchantment" => self::RED . "Invalid enchantment!",
        "invalidItem" => self::RED . "Invalid item!",
        "replacingFilledSlot" => self::RED . "You can not replace an already filled slot!",
        "itemNotFound" => self::RED . "Items not found!",
        "invalidVault" => self::RED . "Invalid vault!",
        "invalidKit" => self::RED . "Invalid kit!",
        "invalidBoss" => self::RED . "Invalid boss!",
        "invalidBlock" => self::RED . "Invalid block!",
        "invalidGuard" => self::RED . "Invalid guard type!",
        "invalidSound" => self::RED . "Invalid sound!",
        "invalidParticle" => self::RED . "Invalid particle!",
        "invalidRank" => self::RED . "Invalid rank!",
        "invalidCrate" => self::RED . "Invalid crate!",
        "claimTitle" => self::YELLOW . "You've unlocked the {name} tile!",
        "claimRank" => self::YELLOW . "You've unlocked the {name} rank!",
        "invalidCoinFlip" => self::RED . "Invalid coin flip!",
        "spectating" => self::ORANGE . "Now spectating: {player}",
        "activeCoinFlip" => self::RED . "You have an active coin flip!",
        "existingCoinFlip" => self::RED . "You have an existing coin flip!",
        "existingEntry" => self::RED . "An auction with this name already exists!",
        "alreadyAllied" => self::RED . "You are already allied!",
        "alreadyEnemy" => self::RED . "You are already enemies!",
        "notEnemy" => self::RED . "You are not enemies with this gang!",
        "cantEnemy" => self::RED . "You can't enemy your allies!",
        "cantAlly" => self::RED . "You can't ally your enemies!",
        "alreadyHaveTitle" => self::RED . "You already have this title!",
        "alreadyMember" => self::RED . "This player is already a member!",
        "maxEntries" => self::RED . "You reached the max amount of entries!",
        "sold" => self::LIGHT_PURPLE . "Sold auction \"{id}\" to {name} for {amount}!",
        "wonAuction" => self::LIGHT_PURPLE . "You've won auction \"{id}\" for {amount}!",
        "buyAuction" => self::LIGHT_PURPLE . "{name} has bought {item} for {amount}!",
        "noSell" => self::RED . "Your items has been returned to your auction inbox due to no sales!",
        "noBids" => self::RED . "You don't have any bids!",
        "addAuctionEntry" => self::AQUA . "You have added an auction for {item} for {price} each with a possible profit of {profit}!",
        "addCoinFlip" => self::AQUA . "You have added a coin flip bet.",
        "canOnlySpawnInArena" => self::RED . "You can only spawn this in the boss arena!",
        "activeBoss" => self::RED . "There is already an active boss!",
        "bossSpawned" => self::LIGHT_PURPLE . "A {type} has been spawned in the boss arena.",
        "enchantmentRemoverFail" => self::RED . "Your enchantment remover failed, {enchantment} was removed!",
        "enchantmentCrystalFail" => self::RED . "Your enchantment crystal failed!",
        "blockProtected" => self::RED . "You can not do this action because this block is protected!",
        "questComplete" => self::AQUA . "You've completed {name}!",
        "onlyInSpawn" => self::RED . "You can only do this at the spawn!",
        "successRepair" => self::AQUA . "You've successfully fixed an item.",
        "successRename" => self::AQUA . "You've successfully renamed an item.",
        "nothingSellable" => self::RED . "You don't have anything to sell!",
        "notSellable" => self::RED . "This item is not sellable!",
        "noActiveLottery" => self::RED . "There aren't any active lotteries!",
        "notBuyable" => self::RED . "This item is not buyable!",
        "rankUp" => self::AQUA . "{name} ranked up to {rank} and got more vaults, more homes, and access to more generators and spawners in shop.",
        "buy" => self::LIGHT_PURPLE . "You bought {amount} {item} for {price}.",
        "sell" => self::LIGHT_PURPLE . "You sold {amount} ores for {price}.",
        "turnOnAToggle" => self::RED . "You must turn on 1 toggle.",
        "gangAddPowerSuccess" => self::AQUA . "You've successfully added {amount} power to {name}.",
        "beInGang" => self::RED . "You must be in a gang to do this!",
        "gangMaxAllies" => self::RED . "{gang} has reached its max amount of allies!",
        "allyRequest" => self::AQUA . "{senderGang} has requested to ally with {gang}.",
        "allyAdd" => self::AQUA . "Your gang has allied with {gang}.",
        "enemyAdd" => self::RED . "Your gang became enemies with {gang}.",
        "neutral" => self::RED . "Your gang is now neutral with {gang}.",
        "invalidGang" => self::RED . "Invalid gang!",
        "homeNotSet" => self::RED . "You don't have a set home!",
        "cantSetHomeHere" => self::RED . "You can't set a home here!",
        "cantTeleportToHomeHere" => self::RED . "You can't teleport to a home from here!",
        "cantTeleportToHome" => self::RED . "You can't teleport to that home!",
        "notInvited" => self::RED . "You were not invited to {gang}!",
        "gangMaxMembers" => self::RED . "{gang} has reached its max amount of members!",
        "roleFlagSet" => self::AQUA . "You've set flag \"{name}\" to {role}+.",
        "inviteSentSender" => self::AQUA . "You've invited {name} to the gang!",
        "inviteSentPlayer" => self::AQUA . "You've been invited to {gang}! Use /f join {gang} to join!",
        "gangJoin" => self::LIGHT_PURPLE . "{name} has joined the gang.",
        "plotGainAccess" => self::LIGHT_PURPLE . "You now have access to {plot}.",
        "plotGainAccessSender" => self::LIGHT_PURPLE . "{name} now has access to {plot}.",
        "plotAccessRevoked" => self::LIGHT_PURPLE . "Your access to {plot} has been revoked.",
        "plotNonExistent" => self::RED . "Plot {plot} does not exist.",
        "warpingToPlot" => self::LIGHT_PURPLE . "Teleporting to plot {plot}",
        "gangLeave" => self::LIGHT_PURPLE . "{name} has left the gang.",
        "inClaim" => self::RED . "You are in a gang's claim!",
        "promotion" => self::LIGHT_PURPLE . "{name} has been promoted to {position}.",
        "editClaimNotAllowed" => self::RED . "You aren't allowed to edit this claim!",
        "claimSuccess" => self::AQUA . "You've successfully claimed this chunk!",
        "overclaimSuccess" => self::AQUA . "You've successfully override this claim!",
        "mustLeaveGang" => self::RED . "You must leave your gang to do this!",
        "gangNameTooLong" => self::RED . "The selected gang name is too long!",
        "identifierTooLong" => self::RED . "Your identifier is too long!",
        "onlyAlphanumeric" => self::RED . "You can only enter alphanumeric characters!",
        "nicknameTooLong" => self::RED . "Your nickname is too long!",
        "existingGang" => self::RED . "{gang} is an existing gang!",
        "gangCreate" => self::AQUA . "You've successfully created a gang.",
        "notGangMember" => self::RED . "{name} is not one of your gang members!",
        "cannotPromote" => self::RED . "{name} can not be promoted!",
        "promoted" => self::LIGHT_PURPLE . "{name} has been promoted by {sender}.",
        "cannotDemote" => self::RED . "{name} can not be demoted!",
        "demoted" => self::LIGHT_PURPLE . "{name} has been demoted by {sender}.",
        "deposit" => self::LIGHT_PURPLE . "{name} has deposited {amount}.",
        "withdraw" => self::LIGHT_PURPLE . "{name} has withdrew {amount}.",
        "mustBeInClaim" => self::RED . "You must be in your claim to do this action!",
        "homeSet" => self::AQUA . "Gang home has been set!",
        "unally" => self::LIGHT_PURPLE . "Your gang has unallied with {gang}.",
        "doNotOwnClaim" => self::RED . "You do not own this claim!",
        "notEnoughStrength" => self::RED . "You don't have enough strength!",
        "notEnoughLevels" => self::RED . "You don't have enough levels!",
        "notClaimed" => self::RED . "This area of land is not claimed!",
        "unclaimSuccess" => self::AQUA . "You've successfully unclaimed this part of the land!",
        "forceDelete" => self::AQUA . "You've successfully force deleted a gang.",
        //"notEnoughGangMembersToClaim" => self::RED . "You don't have enough gang members to claim! You need at least " . Gang::MEMBERS_NEEDED_TO_CLAIM . "!",
        "kothBegin" => self::BLUE . "A KOTH game has begun! Do /koth to tp to koth!",
        "kothStart" => self::BLUE . "A KOTH game is starting in {amount} seconds!",
        "kothEnd" => self::BLUE . "{player} has won the KOTH game!",
        "kothReward" => self::BLUE . "You have received a KOTH Lootbag!",
        "kothRunning" => self::RED . "There is already a KOTH game running!",
        "kothJoined" => self::AQUA . "You have joined the KOTH game!",
        "kothNotRunning" => self::RED . "There is currently no active KOTH game!",
        "reachTierSkipLimit" => self::RED . "You already reached your tier skip limit!",
        "canUseMoreTierSkips" => self::ORANGE . "You can use {amount} more tier skips!",
        "successfullyClaimTier" => self::AQUA . "You've successfully claimed this tier! It will be in your /inbox!",
        "keyAll" => self::BLUE . "{name} gave everyone online {amount} {type} crate key(s)!",
        "godStoneAll" => self::BLUE . "{name} gave everyone online {amount} god stone(s)!",
        "notNumeric" => self::RED . "The number you've entered isn't a valid number!",
        "restartMessage" => "\n" . self::RED . TextFormat::BOLD . TextFormat::RED . "Server will reboot in {minutes}" . TextFormat::BOLD . TextFormat::RED . " minutes(s) and {seconds}" . TextFormat::BOLD . TextFormat::RED . " second(s)\n \n",
        "listMessage" => "{count} {group}: {list}",
        "homeExist" => self::RED . "You can't create an existing home!",
        "invalidHome" => self::RED . "Invalid home!",
        "setHome" => self::AQUA . "You've successfully created a home.",
        "deleteHome" => self::AQUA . "You've successfully removed a home.",
        "removeSkin" => self::AQUA . "You've successfully removed the item skin.",
        "kitCooldown" => self::RED . "This kit is on cooldown for {time}!",
        "maxReached" => self::RED . "You have reached the maximum!",
        "errorOccurred" => self::RED . "An error had occurred in this process!",
        "alreadyVoted" => self::RED . "You have already claimed your vote!",
        "haveNotVoted" => self::RED . "You have not voted yet! Vote at bit.ly/3m3AOdp!",
        "addKeys" => self::AQUA . "You have received {amount} {type} keys!",
        "setRank" => self::AQUA . "Your rank has been set to {rank}!",
        "voteBroadcast" => self::AQUA . "{name} has voted for our server at bit.ly/3m3AOdp and received 1 vote point! {votes} votes before a {amount} god all!",
        "payMoneyTo" => self::AQUA . "You've sent {amount} to {name}.",
        "receiveMoneyFrom" => self::AQUA . "You've received {amount} from {name}.",
        "tagSetSuccess" => self::AQUA . "You've successfully set your title to {tag}.",
        "tagAddSuccess" => self::AQUA . "You've successfully added a {tag} title to {name}.",
        "chatModeSwitch" => self::AQUA . "Your chat mode has been switched to {mode}.",
        "alreadyTeleporting" => self::RED . "{name} already teleporting somewhere!",
        "alreadyTrading" => self::RED . "{name} is already trading with someone!",
        "successTrade" => self::AQUA . "You've successfully traded! View your inbox for items! Use /inbox.",
        "inboxAlert" => TextFormat::BOLD . TextFormat::GOLD . "YOU HAVE PENDING ITEMS IN YOUR /collect!",
        "dropAlert" => TextFormat::BOLD . TextFormat::GOLD . "NO INVENTORY SPACE, YOUR PENDING ITEMS HAVE BEEN DROPPED ON THE FLOOR!",
        "inventoryFull" => TextFormat::RED . "You cannot perform this action with a full inventory!",
        "alreadyRequest" => self::RED . "You have already requested!",
        "didNotRequest" => self::RED . "No request by them was found!",
        "denyRequest" => self::ORANGE . "Your request was denied.",
        "acceptRequest" => self::ORANGE . "Your request was accepted.",
        "requestTeleport" => self::ORANGE . "{name} requested to teleport to {player}.",
        "requestTrade" => self::ORANGE . "{name} requested to trade with {player}.",
        "rankSet" => self::AQUA . "You've successfully set {name}'s rank to {rank}.",
        "setMoneySuccess" => self::AQUA . "You've successfully set name's balance to {amount}.",
        "addMoneySuccess" => self::AQUA . "You've successfully added {amount} to {name}'s balance.",
        "givePremiumPass" => self::AQUA . "You've successfully gave {name} a premium pass.",
        "gainPremiumPass" => self::AQUA . "You bow have access to the premium pass.",
        "fullInventory" => self::RED . "Your inventory is too full!",
        "animationAlreadyRunning" => self::RED . "There's already an animation running!",
        "noKeys" => self::RED . "You don't have any keys for this crate!",
        "noPermissionCombatTag" => self::RED . "You can't do this action because you are combat tagged!",
        "enterSafeZoneInCombat" => self::RED . "You can't enter a safe zone while in combat!",
        "combatTag" => self::RED . "You've been combat tagged, you may not log out for 15 seconds!",
        "flightToggle" => self::ORANGE . "Your flight has been toggled.",
        "vanishToggle" => self::ORANGE . "Your visibility has been toggled.",
        "disguiseOn" => self::ORANGE . "You have disguised as {name} with a {rank} rank!",
        "disguiseOff" => self::ORANGE . "You have disabled your disguise!",
        "noNames" => self::RED . "No names are available!",
        "autoSellToggle" => self::ORANGE . "Your auto sell has been toggled.",
        "hungerRestored" => self::AQUA . "Your hunger was restored!",
        "death" => self::AQUA . "{name} died.",
        "deathByPlayer" => self::AQUA . "{name} was killed by {killer} with a {item}.",
        "borderReached" => self::RED . "You've reached the border!",
        "broadcast" => self::LIGHT_PURPLE . "{message}",
        "restartingSoon" => self::RED . "Server is restarting soon!",
        "addPermission" => self::AQUA . "You have successfully added permission \"{permission}\" to {name}.",
        "balance" => self::AQUA . "{name} balance: {amount}",
        "criminalRecord" => self::AQUA . "{name} current criminal record: {amount} guards killed ({multiplier} dmg)",
        "identicalMessage" => self::RED . "Your message is identical to your last message!",
        "actionCooldown" => self::RED . "Slow down! This action is on cooldown for {amount} seconds!",
        "notEnoughPoints" => self::RED . "You don't have enough points!",
        "fundDisabled" => self::RED . "{feature} are currently disabled due to /fund!",
        "notEnoughTokens" => self::RED . "You don't have enough tokens!",
        "notEnoughMoney" => self::RED . "You don't have enough money!",
        "notEnoughEnergy" => self::RED . "You don't have enough energy!",
        "targetNotEnoughMoney" => self::RED . "{name} doesn't have enough money!",
        "notEnoughEnergyRankUp" => self::RED . "You don't have enough energy! You need {amount} in total!",
        "notEnoughMoneyRankUp" => self::RED . "You don't have enough money! You need {amount} in total!",
        "maxRank" => self::RED . "You are at max rank!",
        "frozen" => self::RED . "{name} frozen currently!",
        "freezePlayer" => self::RED . "You have been frozen! If you leave, that means you will be admitting to hacking causing a 7 day ban!",
        "freezeSender" => self::AQUA . "You've successfully frozen {player}.",
        "unfreezePlayer" => self::AQUA . "You have been unfrozen.",
        "unfreezeSender" => self::AQUA . "You've successfully unfrozen {player}.",
        "coordsShowChange" => self::AQUA . "You've turned {mode} your coordinates displayer.",
        "broadcastMessage" => self::LIGHT_PURPLE . "{message}",
        "luckyBlockFound" => self::ORANGE . "You've found a lucky block! Use /inbox to claim it!",
        "haveCorrectRank" => self::RED . "You currently are the rank you are supposed to be in!",
        "rankTransferred" => self::AQUA . "Your rank has been successfully transferred!",
        "attackGangAssociate" => self::RED . "You may not attack a gang associate!",
        "needLevelsToEnchant" => self::RED . "You need {amount} xp levels to apply this enchantment!",
        "banMessage" => TextFormat::GRAY . "You have been banned by {name} for {reason} for {time}.\n" . TextFormat::AQUA . "You may appeal by creating a ticket on our discord at " . TextFormat::BOLD . "discord.gg/PTenSKknBF",
        "kickMessage" => TextFormat::GRAY . "You have been kicked by {name} for {reason}.",
        "blockMessage" => TextFormat::GRAY . "You have been blocked by {name} for {reason}.",
        "antiCheatKickMessage" => TextFormat::DARK_GRAY . "[" . TextFormat::AQUA . TextFormat::BOLD . "BOOP" . TextFormat::RESET . TextFormat::DARK_GRAY . "] " . TextFormat::GRAY . "You have been kicked for {reason}.",
        "muteMessage" => TextFormat::GRAY . "You have been muted by {name} for {reason} for {time}.",
        "banBroadcast" => self::RED . "{name} has been banned by {effector} for {reason} for {time}.",
        "muteBroadcast" => self::RED . "{name} has been muted by {effector} for {reason} for {time}.",
        "kickBroadcast" => self::RED . "{name} has been kicked by {effector} for {reason}.",
        "blockBroadcast" => self::RED . "{name} has been blocked by {effector} for {reason} for {time}.",
        "antiCheatKickBroadcast" => TextFormat::DARK_GRAY . "[" . TextFormat::AQUA . TextFormat::BOLD . "BOOP" . TextFormat::RESET . TextFormat::DARK_GRAY . "] " . TextFormat::GRAY . "{name} has been kicked for {reason}.",
        "punishmentRelivedBroadcast" => self::AQUA . "{name}'s punishment has been relieved by {effector}.",
        "alreadyBanned" => self::ORANGE . "{name} is already banned.",
        "alreadyBlocked" => self::ORANGE . "{name} is already blocked.",
        "alreadyMuted" => self::ORANGE . "{name} is already muted.",
        "reasonTooLong" => self::RED . "Your reason exceeds 100 characters!",
        "usageMessage" => self::ORANGE . "Usage: {usage}",
        "successAbuse" => self::AQUA . "You've successfully executed an abusive staff command!",
        "unallowedAbuse" => self::RED . "You can not do this to prevent abuse!",
        "wormholeInboxAlert" => self::AQUA . "Your inventory was full, the pickaxe has been placed in /collect!",
        "commandDisabledDuringBoss" => self::RED . "You cannot use any commands whilst participating in a boss battle!",
        "defeatedByHades" => self::RED  . "You have been slain by Hades, but your teammates still stand a chance!",
        "notInBossFight" => self::RED . "You are participating in a boss battle, and cannot attack other entities here!",
        "bossPvPDisabled" => self::RED . "You cannot attack other players in the boss arena, you are on the same team here!",
        "notExecutive" => self::RED . "You cannot run this command outside of the Executive Mine!",
        "notInPlotFloor" => self::RED . "You must be in a cell in order to edit its floor!",
        "notPlotOwnerFloor" => self::RED . "You must be the owner of the cell in order to edit its floor!",
        "floorAlreadyBlock" => self::RED . "Your cell floor is already that block!",
        "changedFloor" => self::AQUA . "Cell floor changed to {block}!",
        "invalidSet" => self::RED . "Specified set does not exist!"
    ];

    const RED = TextFormat::BOLD . TextFormat::RED . "(!) " . TextFormat::RESET . TextFormat::GRAY;

    const ORANGE = TextFormat::BOLD . TextFormat::GOLD . "(!) " . TextFormat::RESET . TextFormat::GRAY;

    const YELLOW = TextFormat::BOLD . TextFormat::YELLOW . "(!) " . TextFormat::RESET . TextFormat::GRAY;

    const GREEN = TextFormat::BOLD . TextFormat::GREEN . "(!) " . TextFormat::RESET . TextFormat::GRAY;

    const AQUA = TextFormat::BOLD . TextFormat::AQUA . "(!) " . TextFormat::RESET . TextFormat::GRAY;

    const CYAN = TextFormat::BOLD . TextFormat::DARK_AQUA . "(!) " . TextFormat::RESET . TextFormat::GRAY;

    const LIGHT_PURPLE = TextFormat::BOLD . TextFormat::LIGHT_PURPLE . "(!) " . TextFormat::RESET . TextFormat::GRAY;

    const BLUE = TextFormat::BOLD . TextFormat::BLUE . "(!) " . TextFormat::RESET . TextFormat::GRAY;

    const DARK_BLUE = TextFormat::BOLD . TextFormat::DARK_BLUE . "(!) " . TextFormat::RESET . TextFormat::GRAY;

    const GRAY = TextFormat::BOLD . TextFormat::DARK_GRAY . "(!) " . TextFormat::RESET . TextFormat::GRAY;
}